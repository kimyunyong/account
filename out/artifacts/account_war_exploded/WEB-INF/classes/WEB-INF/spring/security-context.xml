<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd">
    <beans:bean id="CustomizeAuthenticationSuccessHandler" class="com.nandsoft.account.security.CustomizeAuthenticationSuccessHandler" />
    <beans:bean id="CustomizeAuthenticationFailureHandler" class="com.nandsoft.account.security.CustomizeAuthenticationFailureHandler" />
    <beans:bean id="bcEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!--use-expressions="true" : SpEL문법을 사용한다는 의미-->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/member/**" access="hasAnyRole('ROLE_USER','ROLE_GUEST')"/>
        <intercept-url pattern="/user/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="permitAll"/>

        <form-login
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/loginProc"
                login-page="/login"
                default-target-url="/index" />

        <logout
                logout-url="/logoutProc"
                logout-success-url="/index"
                invalidate-session="true"
                delete-cookies=""/>
    </http>

    <!--에러나면 주석 풀자!-->
    <!--<authentication-manager>
          <authentication-provider>
              <user-service>
                  <user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
                  <user name="user" password="{noop}user" authorities="ROLE_USER"/>
              </user-service>
          </authentication-provider>
      </authentication-manager>-->

    <authentication-manager>
        <authentication-provider ref="userAuthProvider" />
        <authentication-provider user-service-ref="userDetailsService" />
    </authentication-manager>


    <beans:bean id="userDao" class="com.nandsoft.account.dao.UserDaoImpl"/>
    <beans:bean id="userDetailsService" class="com.nandsoft.account.security.UserDetailsServiceImpl"/>
    <beans:bean id="userAuthProvider" class="com.nandsoft.account.security.CustomAuthenticationProvider"/>
   <!--beans:bean id="customDataSource" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="usersByUsernameQuery">
            <beans:value>
                SELECT username, password
                FROM user
                WHERE username = ?
            </beans:value>
        </beans:property>
    </beans:bean>-->

    <!--<authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="
                                    SELECT username, password, 1 as enabled
                                    FROM user
                                    WHERE username = ?"
                               authorities-by-username-query="
                                    SELECT username, role
                                      FROM user
                                      WHERE username = ?" />
            <password-encoder ref="bcEncoder"/>
        </authentication-provider>
    </authentication-manager>-->

    <!--<beans:property name="authoritiesByUsernameQuery">
        <beans:value>
            SELECT username, password, role
            FROM user
            WHERE username = ?
        </beans:value>
    </beans:property>-->
   <!-- <authentication-manager>
        <authentication-provider user-service-ref="customDataSource">
            <password-encoder ref="bcEncoder" />
        </authentication-provider>

    </authentication-manager>-->




    <!--<beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>-->

    <!--<authentication-manager>
        <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="customAuthenticationProvider" class="com.yakolla.blackjack.CustomAuthenticationProvider"/>-->

</beans:beans>